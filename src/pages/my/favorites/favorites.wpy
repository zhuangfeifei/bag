<template>
  <view wx:if="{{imgUrl}}" id="favorites" class="{{allCategory || allState ? 'scroll' : ''}}" style="padding-bottom: {{!isAnimation ? '60rpx' : '0'}}">


        <view>
            <view class='favorites'>
                <view class='favorites_nav'>
                <view>
                    <text @tap='allCategory' class="{{allCategory ? 'active' : ''}}">全部类目</text>
                    <image @tap='allCategory' src="/images/my/{{allCategory ? 'down' : 'up'}}.png"/>
                    <text @tap='allState' class="{{allState ? 'active' : ''}}">全部状态</text>
                    <image @tap='allState' src="/images/my/{{allState ? 'down' : 'up'}}.png"/>
                </view>
                <view>
                    <image src="{{imgUrl+'/my/SCJ_guanli.png'}}" />
                    <text @tap='management' class="{{!isAnimation ? 'complete' : ''}}">{{isAnimation ? '管理' : '完成'}}</text>
                </view>
                </view>
                <view class='divider'></view>
            </view>
        </view>

        <!-- 全部分类 -->
        <view class="allCategory" wx:if="{{allCategory}}">
            <category :category.sync="category"></category>
        </view>
        <!-- 全部状态 -->
        <view class="allCategory" wx:if="{{allState}}">
            <allState :category.sync="category"></allState>
        </view>

        <view class='favorites_list'>
            <view wx:if="{{isChange}}" class='goodsList_checked' animation="{{animationRight}}">
                <view class='goodsList_checked_' wx:for="{{favoritesList}}" wx:key="{{index}}" @tap='checke' data-data="{{item}}" data-index="{{index}}">
                    <view><image wx:if="{{item.checked}}" src="{{imgUrl+'/my/checked.png'}}"/></view>
                </view>
            </view>
            <view wx:if="{{isChange}}" class='goodsList' animation="{{animationLeft}}" style="min-height: {{screenHeight+'px'}};">
                <favoritesGoodsList :favoritesList.sync="favoritesList"></favoritesGoodsList>
            </view>
            <view wx:else class='goodsList_' animation="{{animationLeft}}">
                <segmentation></segmentation>
            </view>
        </view>


        <view class='noMore'>
          <image wx:if="{{!isMore}}" src="{{imgUrl+'/my/loading.png'}}" animation="{{animationRound}}" />
          <text wx:if="{{!isMore}}">正在加载...</text>
          <text wx:if="{{favoritesList.length >= 10 && isMore}}">~没有更多了~</text>
        </view>

    <view class='management' wx:if="{{!isAnimation}}">
      <view @tap='checkedAll'>
        <view>
          <image wx:if="{{isCheckedAll}}" src="{{imgUrl+'/my/checked.png'}}" />
        </view><text>全选</text>
      </view>
      <view>
        <button @tap="emptyShelves">清空下架</button>
        <button @tap="deleteCollotion">删除</button>
      </view>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy';
import { connect } from 'wepy-redux';
import 'wepy-async-function';
import favoritesGoodsList from '../../../components/favoritesGoodsList';
import segmentation from '../../../components/segmentation';
import category from '../../../components/category';
import allState from '../../../components/allState';

@connect({
  userinfo(state) {
    return state.counter.userinfo;
  },
  imgUrl(state){
      return state.counter.imgUrl
  },
  category(state) {
    return state.counter.category;
  },
  favoritesList(state) {
    return state.counter.favoritesList;
  },
  categoryIds(state) {
    return state.counter.categoryId;
  },
  stateId(state) {
    return state.counter.stateId;
  }
})
export default class Favorites extends wepy.page {
  config = {
    navigationBarTitleText: '收藏夹'
  };

  components = {
    favoritesGoodsList,
    segmentation,
    category,
    allState
  };

  data = {
    screenHeight: '',
    allCategory: false,
    allState: false,
    isChange: true,
    animationLeft: '',
    animationRight: '',
    isAnimation: true,
    isCheckedAll: false,
    animationRound: '',
    // favoritesLists:[],
    current: 1,
    isMore: false,
    isState: false
  };

  computed = {
    // favoritesList(){
    //     let list = []
    //     for(let val of this.favoritesLists){
    //       val.checked = false
    //       list.push(val)
    //     }
    //     return list
    // }
  };

  methods = {
    change() {
      this.isChange = !this.isChange;
      this.$apply();
    },
    // 管理
    management() {
      if (this.isChange) {
        const animationLeft = wx.createAnimation({
          duration: 1000,
          timingFunction: 'ease'
        });
        const animationRight = wx.createAnimation({
          duration: 1000,
          timingFunction: 'ease'
        });

        animationLeft
          .translate(this.isAnimation ? this.px(100) : 0)
          .step({ duration: 500 });
        animationRight
          .translate(this.isAnimation ? this.px(120) : 0)
          .step({ duration: 500 });

        this.animationLeft = animationLeft.export();
        this.animationRight = animationRight.export();
      }
      this.isAnimation = !this.isAnimation;
      this.$apply();
    },
    // 全部类目
    allCategory() {
      if (this.isAnimation) {
        this.allCategory = !this.data.allCategory;
        this.allState = false;
      }
    },
    // 全部状态
    allState() {
      if (this.isAnimation) {
        this.allCategory = false;
        this.allState = !this.data.allState;
      }
    },
    checke(e) {
      this.favoritesList[e.currentTarget.dataset.index].checked = !this
        .favoritesList[e.currentTarget.dataset.index].checked;
      //  console.log(this.favoritesList)
      this.$apply();
    },
    checkedAll() {
      this.isCheckedAll = !this.isCheckedAll;
      for (let val of this.favoritesList) {
        val.checked = this.isCheckedAll;
      }
    },
    deleteCollotion() {
      let arr = [];
      for (let val of this.favoritesList) {
        val.checked ? arr.push(val.id) : '';
      }
      if (arr.length > 0) {
        wepy.$Api
          .uncollection({
            unionId: this.userinfo.unionid,
            clothIds: arr.join(',')
          })
          .then(
            res => {
              // console.log(res.data)
              if (res.data.code == 200) {
                wepy.showToast({
                  title: '删除成功',
                  icon: 'success',
                  duration: 2000
                });
                this.onReachBottom();
              }
            },
            err => {}
          );
      }
    },
    emptyShelves() {
      wepy.$Api.emptyShelves({ unionId: this.userinfo.unionid }).then(
        res => {
          // console.log(res.data)
          if (res.data.code == 200) {
            wepy.showToast({
              title: '清空成功',
              icon: 'success',
              duration: 2000
            });
            this.onReachBottom();
          }
        },
        err => {}
      );
    }
  };

  // rpx转px
  px(rpx) {
    var systemInfo = wx.getSystemInfoSync();
    return (rpx / 750) * systemInfo.windowWidth;
  }

  onLoad() {
    let screenHeight = wx.getSystemInfoSync().windowHeight;
    this.screenHeight = screenHeight - this.px(120);

    this.onReachBottom();

    // 分类
    wepy.$Api.collotionCategory({ unionId: this.userinfo.unionid }).then(
      res => {
        // console.log(res.data)
        if (res.data.code == 200) {
          wepy.$store.dispatch({
            type: 'categoryMethod',
            payload: res.data.data
          });
        }
      },
      err => {}
    );
    // 状态
    wepy.$Api.collotionStatus({ unionId: this.userinfo.unionid }).then(
      res => {
        // console.log(res.data)
        if (res.data.code == 200) {
          // wepy.$store.dispatch({type:'categoryMethod', payload: res.data.data})
        }
      },
      err => {}
    );
  }

  watch = {
    favoritesList(value) {
      let isChecked = true;
      for (let val of value) {
        if (!val.checked) isChecked = false;
      }
      this.isCheckedAll = isChecked;
    },
    categoryIds(value) {
      this.isState = false;
      this.isMore = false;
      this.allCategory = false;
      this.current = 1;
      this.onReachBottom();
      this.$apply();
    },
    stateId(value) {
      this.isState = true;
      this.isMore = false;
      this.allState = false;
      this.current = 1;
      this.onReachBottom();
      this.$apply();
    }
  };

  onReachBottom() {
    if (!this.isMore) {
      if (!this.isState) {
        let list = {
          unionId: this.userinfo.unionid,
          categoryId: this.categoryIds.categoryId || '',
          smallCategoryId: this.categoryIds.smallCategoryId || '',
          limit: 10,
          current: this.current
        };
        wepy.$Api.collotionCloth(list).then(
          res => {
            // console.log(res.data)
            if (res.data.code == 200) {
              this.getMore(res);
            }
          },
          err => {}
        );
      } else {
        let list = {
          unionId: this.userinfo.unionid,
          statusType: this.stateId,
          limit: 10,
          current: this.current
        };
        wepy.$Api.collotionStatusCloth(list).then(
          res => {
            // console.log(res.data)
            if (res.data.code == 200) {
              this.getMore(res);
            }
          },
          err => {}
        );
      }
    }
  }

  getMore(res) {
    let list = [];
    for (let val of res.data.data) {
      val.checked = false;
      list.push(val);
    }
    wepy.$store.dispatch({
      type: 'favoritesMethod',
      payload: this.current > 1 ? this.favoritesList.concat(list) : list
    });
    this.current++;
    res.data.data.length == 0 ? (this.isMore = true) : (this.isMore = false);
    this.$apply();
  }

  onUnload() {
    wepy.$store.dispatch({ type: 'categoryIdMethod', payload: '' });
    wepy.$store.dispatch({ type: 'stateIdMethod', payload: '' });
  }

  onReady() {
    this.animationRounds();
  }
  animationRounds() {
    //加载更多动画
    const animation = wx.createAnimation({
      duration: 500,
      timingFunction: 'linear'
    });

    var n = 0;
    setInterval(() => {
      n = n + 1;
      animation.rotate(180 * n).step();
      this.animationRound = animation.export();
    }, 500);
  }
}
</script>

<style lang='less'>
#favorites {
  width: 100%;
  min-height: 100%;
  background-color: #f2f2f2;
  box-sizing: border-box;
}
.scroll {
  position: fixed;
}

#favorites {
  width: 100%;
  min-height: 100%;
  background: rgba(246, 246, 246, 1);
  box-sizing: border-box;
  overflow: hidden;
  padding-top: 120rpx;
}

.favorites {
  width: 100%;
  height: 120rpx;
  background-color: #ffffff;
  box-sizing: border-box;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 5;
}
.favorites_nav {
  width: 100%;
  height: 100%;
  font-size: 24rpx;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 40rpx;
  color: #1a213c;
  font-family: PingFang-SC-Medium;
  font-weight: 500;
  box-sizing: border-box;
}
.divider {
  width: calc(100% - 80rpx);
  height: 2rpx;
  background-color: #e8e8e8;
  margin: 0 auto;
}
.favorites_nav view:nth-child(1) image {
  width: 20rpx;
  height: 10rpx;
  margin-left: 10rpx;
}
.favorites_nav view:nth-child(2) {
  display: flex;
  align-items: center;
}
.favorites_nav view:nth-child(2) image {
  width: 24rpx;
  height: 24rpx;
  margin-right: 20rpx;
}
.favorites_nav view:nth-child(1) text:nth-child(3) {
  margin-left: 48rpx;
}
.favorites_nav view:nth-child(2) text:nth-child(2) {
  border-left: 2rpx solid #e8e8e8;
  padding-left: 20rpx;
}
.complete {
  color: #c15356;
}
.active {
  color: #f4695f;
}

.favorites_list {
  width: 100%;
  display: flex;
  background-color: #ffffff;
  // padding-bottom: 100rpx;
}
.goodsList {
  width: 100%;
  padding: 0 40rpx;
  box-sizing: border-box;
}
.goodsList_ {
  width: 100%;
  padding: 48rpx 40rpx;
  box-sizing: border-box;
}
.goodsList_checked {
  width: 120rpx;
  background-color: #f6f6f6;
  padding-bottom: 20rpx;
  margin-left: -120rpx;
}
.goodsList_checked_ {
  width: 120rpx;
  height: 180rpx;
  display: flex;
  align-items: center;
  justify-content: center;
}
.goodsList_checked_:last-child {
  margin-bottom: 0;
}
.goodsList_checked_ view {
  width: 40rpx;
  height: 40rpx;
  border: 1px solid rgba(232, 232, 232, 1);
  border-radius: 50%;
  background-color: #ffffff;
}
.goodsList_checked_ view image {
  width: 100%;
  height: 100%;
}

.noMore {
  width: 100%;
  height: 48rpx;
  font-size: 20rpx;
  color: #808080;
  display: flex;
  justify-content: center;
  align-items: center;
}
.noMore image {
  width: 28rpx;
  height: 28rpx;
  margin-right: 20rpx;
}

.management {
  width: 100%;
  height: 98rpx;
  border-top: 1rpx solid #c15356;
  position: fixed;
  bottom: 0;
  left: 0;
  background-color: #ffffff;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  padding: 0 38rpx;
}
.management view {
  display: flex;
  font-size: 30rpx;
  color: #2a2a2a;
  line-height: 48rpx;
}
.management view:nth-child(1) view {
  width: 40rpx;
  height: 40rpx;
  border-radius: 50%;
  border: 2rpx solid #e8e8e8;
  margin-right: 20rpx;
}
.management image {
  width: 100%;
  height: 100%;
}
.management button {
  width: 160rpx;
  height: 56rpx;
  font-size: 24rpx;
  line-height: 56rpx;
  text-align: center;
  border-radius: 28rpx;
  border: 0;
  font-family: PingFang-SC-Medium;
  font-weight: 500;
}
.management button:nth-child(1) {
  width: 180rpx;
  background-color: #ffffff;
  border: 1px solid #808080;
  color: #808080;
}
.management button:nth-child(2) {
  background-color: #c15356;
  color: #ffffff;
  margin-left: 20rpx;
}

.allCategory {
  width: 100%;
  position: fixed;
  top: 120rpx;
  left: 0;
  z-index: 2;
}
</style>
